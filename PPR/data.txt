

Zadanie Średnie (ppr10)
=======================

Studenci w toku swoich studiów otrzymują pewne oceny. Zdarzają się w trakcie studiowania takie momenty, kiedy z pewnych względów potrzebna jest średnia ocen lub lista wszystkich dotychczas otrzymanych ocen.

Napisz program, który będzie wczytywał kolejne oceny otrzymywane przez studenta (od 2 do 5 - zakładamy, że nie ma połówek), a dla podanych poniżej wartości będzie wykonywał następujące akcje:

1: wypisanie na wyjściu średniej dotychczas otrzymanych ocen, z dokładnością do dwóch miejsc po przecinku,
0: wypisanie na wyjściu w jednej linii wszystkich dotychczas otrzymanych ocen w kolejności ich otrzymywania,
-1: zakończenie studiów (koniec działania programu).

Wejście:

Wejście składa się z ciągu liczb całkowitych. Każda liczba przyjmuje wartość od -1 do 5, gdzie liczby od 2 do 5 oznaczają oceny otrzymane przez studenta, a znaczenie liczb 1, 0 i -1 opisano w treści zadania.
Na wejściu nie pojawi się więcej niż 1010 liczb.

Wyjście:

Na wyjściu należy dla każdej wartości 0 lub 1 wypisać w osobnej linii wartości określone w treści zadania.

Przykład:

Wejście:

5 5 4 4 1 5 5 0 4 4 1 0 1 5 4 3 2 1 0 -1

Wyjście:

4.50
5 5 4 4 5 5
4.50
5 5 4 4 5 5 4 4
4.50
4.17
5 5 4 4 5 5 4 4 5 4 3 2

Zadanie Big boom! (ppr10a)
==========================

Napisz program, który dla N przykładów wypisze napis "BIG BOOM!" z zadaną liczbą zanaków "I", "O" oraz "!".

Wejście:

Wejście składa się z liczby N (1 <= N <= 100) oraz z N liczb określających liczbę liter "I", "O" oraz "!".

Wyjście:

Na wyjściu należy wypisać N razy napis "BIG BOOM!", w którym znaki "I", "O" oraz "!" będą powtórzone M razy.

Przykład:

Wejście:
3
2 4 6

Wyjście:
BIIG BOOM!!
BIIIIG BOOOOM!!!!
BIIIIIIG BOOOOOOM!!!!!!

----------------------------------------------------------------
Big boom!

Write a program which writes a text "BIG BOOM!" with a fixed number of characters "I", "O" and "!".

Input:

First line of the input is an integer N (1 <= N <= 100). Second line is a sequence of N integers defining the number of the specified characters.

Output:

Write N times text "BIG BOOM!", each with the specified number of characters "I', "O" and "!".

Example:
In:
3
2 4 6

Out:
BIIG BOOM!!
BIIIIG BOOOOM!!!!
BIIIIIIG BOOOOOOM!!!!!!

Zadanie Suma NWD (ppr11)
========================

Dany jest następujący problem: pewien generator wyrzuca z siebie ciąg losowych liczb naturalnych. Co jakiś czas na wejściu pojawia się liczba 1. Należy wówczas wyliczyć największy wspólny dzielnik dwóch ostatnich liczb większych od 1, aby na końcu móc podać sumę wszystkich obliczonych w ten sposób wartości. Gdy na wejściu pojawia się 0, oznacza to, że generator zakończył swe działanie.

Wejście

Wejście składa się z ciągu liczb całkowitych. Każda liczba przyjmuje wartość od 0 do 30000, gdzie liczby od 2 do 30000 oznaczają kolejne wartości dane przez generator, liczba 1 oznacza rozkaz wyznaczenia NWD ostatnich dwóch liczb większych od 1, a 0 jest zawsze ostatnią liczbą pojawiającą się na wejściu.
Dwie pierwsze liczby są zawsze większe od 1 (czyli liczb na wejściu jest co najmniej 3).
Na wejściu nie pojawi się więcej niż 1 000 000 000 liczb.

Wyjście

Na wyjściu należy wypisać jedną liczbę całkowitą, która oznacza sumę wszystkich wyznaczonych największych wspólnych dzielników.

Przykład

Wejście:

5 5 4 4 1 5 5 1 4 4 1 1 1 5 4 3 2 1 0

Wyjście:

22

Zadanie Pudełeczka (ppr12a)
===========================

Mała Zosia chowa swoje skarby w pudełeczkach. Często chciałaby wiedzieć, ile w którym się znajduje, ale niestety nie umie jeszcze liczyć, więc poprosiła Cię, abyś jej pomógł. Napisz program, który odpowie na pytanie Zosi: Ile skarbów znajduje się w pudełeczkach, które stoją pomiędzy dwoma wskazanymi pudełkami?

Wejście
Pierwsza linia wejścia składa się z jednej liczby całkowitej x (1 <= x <= 1000) oznaczającej liczbę pudełeczek. W kolejnej linii znajduje się x liczb całkowitych opisujących liczbę skarbów w każdym pudełeczku - od pierwszego do x-tego. Każde pudełeczko mieści co najwyżej 100 skarbów.
W kolejnej linii znajduje się liczba y (1 <= y <= 1000) zapytań Zosi. Kolejnych y linii zawiera po dwie liczby całkowite a i b (1 <= a <= b <= x), oznaczające numery pudełek wskazanych przez Zosię.
Wyjście
Na wyjściu należy wypisać y linii - każda powinna zawierać dokładnie jedną liczbę, która jest odpowiedzią na pytanie Zosi, czyli łączną liczbą skarbów w pudełkach, które stoją pomiędzy wskazanymi (wraz z zawartością wskazanych pudełek).
Uwaga: Zawartość pudełek wskazanych przez Zosię (czyli krańcowych) wlicza się do łącznej liczby skarbów "pomiędzy" nimi.

Przykład

Wejście:
6
1 2 3 4 5 6
4
1 3
2 4
4 4
1 6

Wyjście:
6
9
4
21

Zadanie Silnie (ppr13)
======================

Wartość k-tej silni wielokrotnej z liczby n (oznaczaną przez n z k wykrzyknikami) obliczamy ze wzorów n!!...! = 1, jeśli 0<=n<k, oraz n!!...! = n((n-k)!!...!), jeśli n>=k (we wszystkich wzorach występuje po k wykrzykników). Napisz program służący do obliczania wartości silni wielokrotnych.

Wejście

W pierwszej linii wejścia znajduje się jedna liczba całkowita t<=10 oznaczająca liczbę testów.
W kolejnych liniach znajdują się poszczególne testy. Każdy z nich składa się z dwóch liczb całkowitych, n oraz k (1<=n,k<=12).

Wyjście

Dla każdego testu wypisz w osobnej linii wartość k-tej silni liczby n.

Przykład

Wejście:
3
5 1
5 2
10 4

Wyjście:
120
15
60

Zadanie Króliki (ppr14)
=======================

Agnieszka dowiedziała się ostatnio, skąd wziął się ciąg Fibonacciego. Mianowicie, uczony rozważał teoretyczny eksperyment dotyczący szybkości rozmnażania się stada królików przy następujących założeniach:
- na początku mamy jedną nowo narodzoną parę królików
- każda nowa para staje się płodna po miesiącu życia
- każda płodna para ma co miesiąc jedną parę potomstwa
- króliki są nieśmiertelne.
Wartość F(n) oznacza po prostu liczbę par królików po n miesiącach.
Agnieszka zastanawia się teraz, jakie byłoby rozwiązanie analogicznego zagadnienia w przypadku gdyby każda para królików stawała się płodna dopiero po dwóch miesiącach, ale za to miała co miesiąc dwie nowe pary potomstwa.

Wejście

W pierwszej linii wejścia znajduje się jedna liczba całkowita t<=5 oznaczająca liczbę testów.
W kolejnych liniach znajdują się poszczególne testy. Każdy z nich składa się z jednej liczby całkowitej n (0<=n<=30).

Wyjście

Dla każdego testu wypisz w osobnej linii liczbę par królików otrzymanych po n miesiącach w eksperymencie Agnieszki.

Przykład

Wejście:
4
0
1
3
4

Wyjście:
1
1
3
5

Zadanie Synowie Abrahama (ppr15a)
=================================

Stary Abraham miał siedmiu synów. Każdy potomek Abrahama z parzystego pokolenia (wnuk, praprawnuk, praprapraprawnuk...) miał 3 synów, a każdy potomek Abrahama z nieparzystego pokolenia (syn, prawnuk, prapraprawnuk...) miał 5 synów. Oj, liczne jest potomstwo Abrahama – dlatego nie dziwi, że stary Abraham nie może się doliczyć swoich zstępnych. Pomóż Abrahamowi policzyć swoich potomków.

Wejście

Pierwsza linia wejścia składa się z jednej liczby całkowitej 1 <= N <= 20, która oznacza liczbę testów.
W każdej z N kolejnych linii znajduje się liczba 1 <= M <= 15, która oznacza liczbę pokoleń, które bierzemy pod uwagę.

Wyjście

Dla każdej liczby M należy w osobnym wierszu wypisać liczbę potomków Abrahama (nie wliczając samego Abrahama) od pierwszego aż do M-tego pokolenia (pierwszym pokoleniem są synowie Abrahama, drugim – wnuki itd.).

Przykład

Wejście:
4
1
2
3
5

Wyjście:
7
42
147
2247

Wyjaśnienie:
7
42 = 7 + 5 * 7
147 = 7 + 5 * 7 + 3 * (5 * 7)
2247 = 7 + 5 * 7 + 3 * (5 * 7) + 5 * (3 * (5 * 7)) + 3 * (5 * (3 * (5 * 7)))

Zadanie Rytuał (ppr16)
======================

Znany podróżnik Antonio przebywając wśród Indian Ameryki Południowej zapoznał się z rytuałem ułatwiającym szamanom wejście w trans. Szaman zasiada przy ognisku i określa magiczną liczbę x. Następnie, jeśli x jest liczbą parzystą, to szaman dorzuca do ogniska garść kwiatów i dzieli x przez 2. Jeśli natomiast x jest nieparzyste, to do ogniska dorzuca garść liści i oblicza wartość 3x+1. Te operacje należy powtarzać dla otrzymywanych kolejno wartości do czasu kiedy x będzie równe 1.
Antonio zastanawia się, dla jakich wartości x rytuał zostaje zakończony po co najwyżej 15 krokach. Chciałby też wiedzieć, ile kwiatów i liści potrzeba do wprowadzenia szamana w trans. W związku z tym poprosił programistów o zaimplementowanie funkcji, która dla zadanej wartości x odpowie na pytanie, czy rytuał zakończy się po najwyżej 15 krokach, i jeśli tak, to poda także liczbę zużytych garści kwiatów i liści.

Wejście

Wejście zawiera co najwyżej 20 testów. Każdy test składa się z jednej liczby naturalnej x z zakresu od 2 do 100. Ostatnią liczbą wejścia jest zawsze 0.

Wyjście

Dla każdego testu należy w osobnej linii wypisać słowo "TAK", jeśli rytuał zakończy się po co najwyżej 15 krokach, lub "NIE" w przeciwnym przypadku. Jeśli odpowiedź brzmi "TAK", należy w tej samej linii wypisać także liczbę zużytych w rytuale garści kwiatów i garści liści.

Przykład

Wejście:

7
10
0

Wyjście:

NIE
TAK 5 1

Zadanie Liczba Roku (ppr17)
===========================

Naukowcy z całego świata postanowili wybrać Liczbę Roku 2012. Ustalili, że wybór odpowiedniej liczby powinien mieć coś wspólnego z podzielnością. Stworzyli długą listę liczb, które ich zdaniem byłyby dobrymi kandydatami na dzielniki Liczby Roku. Ponieważ każdy naukowiec dopisywał swoje liczby nie oglądając się na innych, na liście tej mogą występować powtórzenia. Wydawałoby się, że wybór Liczby Roku powinien być teraz łatwy, ale doradcy do spraw PR doszli do wniosku, że przyjęcie bardzo dużej wartości byłoby niekorzystne. Naukowcy muszą wybrać liczbę nie większą niż milion. Rozważają kandydatury różnych ciekawych liczb i dla każdej z nich chcą się dowiedzieć, ile liczb z przygotowanej listy jest jej dzielnikami.

Wejście

W pierwszej linii wejścia znajduje się liczba naturalna n (1<=n<=200000), określająca długość listy potencjalnych dzielników Liczby Roku 2012. W kolejnej linii podane są elementy tej listy, będące liczbami naturalnymi z zakresu od 1 do 1000. W trzeciej linii znajduje się liczba naturalna m (1<=m<=10), oznaczająca liczbę rozważanych kandydatów na Liczbę Roku. W kolejnych m liniach znajdują się te liczby (całkowite, z zakresu od 1 do 1000000).

Wyjście

Dla każdego kandydata na Liczbę Roku wypisz w osobnej linii, ile liczb z listy przygotowanej przez naukowców jest jego dzielnikami.

Przykład

Wejście:

5
2 1 7 3 2
2
8
11

Wyjście:

3
1

Zadanie Palindromy (ppr18)
==========================

Palindromem nazywamy słowo, które wygląda tak samo pisane od lewej do prawej i od prawej do lewej. Napisz program rozpoznający palindromy.

Wejście

W pierwszej linii wejścia znajduje się liczba n (1<=n<=10) testowanych słów. W kolejnych n liniach podane są słowa, składające się z małych liter alfabetu angielskiego. Długość żadnego słowa nie przekracza 30 znaków.

Wyjście

Dla każdego wczytanego słowa, w osobnej linii, wypisz najpierw to słowo, a potem symbol "==", jeśli to słowo jest palindromem, lub "!=", jeśli nie jest palindromem. Następnie wypisz wczytane słowo zapisane od końca.

Przykład

Wejście:

2
abcddc
ababa

Wyjście:

abcddc!=cddcba
ababa==ababa

Zadanie Kalkulator z bajerami (ppr18a)
======================================

Jaś uczy się języka C. Ostatnio poznał bibliotekę <string.h>. Postanowił napisać program, w którym wykorzysta jej możliwości. Wymyślił sobie, że będzie to rodzaj kalkulatora, ale z bajerami:
jeśli na wejściu będą podane dwie liczby, to program wyliczy ich sumę,
jeśli na wejściu będą podane dwa napisy, to program wyświetli ich konkatenację,
jeśli na wejściu będzie podana liczba K oraz napis S (w dowolnej kolejności), to program wyświetli K-ty znak napisu S.
Pomóż Jasiowi napisać wymyślony przez niego program.
 
Wejście
 
W pierwszej linii wejścia znajduje się liczba n (1<=n<=100) "zadań" dla kalkulatora, które się za chwilę pojawią.
W każdej z kolejnych n linii znajdują się dwie liczby lub dwa napisy, lub liczba i napis, lub napis i liczba.
Żaden z napisów nie zawiera spacji ani cyfr, żaden też nie jest dłuższy niż 10 znaków.
UWAGA: Napisy nie zawierają spacji ani cyfr, ale mogą zawierać inne znaki (np. '?', '&' czy '@')!
Wyjście
Wyjście składa sie z n linii.
n-ta linia zawiera wynik n-tego "zadania" (liczbę, napis bądź pojedynczy znak), zgodnie z założeniami podanymi przez Jasia.
Przykład
 
Wejście
 
4
kot lina?
1 pies
swinia! 3
5 7
Wyjście
 
kotlina?
p
i
12
 
Wymagania
 
Użyj funkcji z biblioteki <string.h>. Do wczytywania i wypisywania użyj funkcji scanf i printf.

Zadanie Spamer (ppr19)
======================

Administratorzy pewnego forum podejrzewają, że jeden z użytkowników jest złośliwym spamerem. Postanowili to sprawdzić, zliczając, ile razy w ustalonym okresie czasu wypowiedział się na forum. Pomóż im w tym zadaniu.

Wejście

W pierwszej linii wejścia znajduje się liczba całkowita n (1<=n<=100), określająca liczbę postów, które pojawiły się na forum w czasie obserwacji. W kolejnych n liniach znajdują się loginy autorów poszczególnych postów. Każdy login jest napisem składającym się z co najmniej jednego i co najwyżej 20 znaków, a ponadto może zawierać wyłącznie małe i duże litery alfabetu angielskiego oraz cyfry. W ostatniej linii znajduje się login użytkownika podejrzanego o bycie spamerem.

Wyjście

Wypisz liczbę zaobserwowanych postów podejrzanego użytkownika.

Przykład

Wejście:

5
user1
aaa
aaa
student808
x
aaa

Wyjście:

2

Zadanie Monolit (ppr2)
======================

Andrzej dostał w prezencie grę planszową inspirowaną znaną powieścią fantastyczno-naukową. W skład zestawu do gry wchodzą między innymi figurki do własnoręcznego pomalowania. Andrzej planuje zacząć malowanie od figurki w kształcie prostopadłościanu, przedstawiającej olbrzymi monolit. Aby dowiedzieć się, ile farby potrzebuje, musi obliczyć pole powierzchni tej figurki.

Wejście

Wejście składa się z jednej linii, zawierającej oddzielone pojedynczymi spacjami trzy liczby całkowite A, B, C, oznaczające odpowiednio długość, szerokość i wysokość figurki (0<A,B,C<10000).

Wyjście

Należy wypisać jedną liczbę całkowitą, określającą pole powierzchni figurki monolitu.

Przykład

Wejście:
10 10 10

Wyjście: 
600

Zadanie Podejrzana karteczka (ppr20)
====================================

Detektyw Paul Drake, prowadząc przeszukanie w mieszkaniu zatrzymanego przemytnika, znalazł pod dywanem karteczkę zapisaną dziwnymi symbolami. Podejrzewa, że może to być zaszyfrowana wiadomość dotycząca miejsca przechowywania przemycanego towaru. Zamierza przekazać ją specjalistom od kryptologii, ale postanowił sam przeprowadzić wstępną analizę. Na początek potrzebuje informacji o liczbie liter oraz cyfr w poszczególnych liniach tekstu.

Wejście

Pierwsza linia wejścia zawiera liczbę naturalną n (1<=n<=10), mówiącą, ile linii tekstu znajduje się na znalezionej karteczce. Następnie podane są kolejno te linie. Każda z nich może zawierać małe i duże litery alfabetu angielskiego, cyfry, znaki interpunkcyjne oraz spacje. Długość każdej linii wynosi co najmniej 1 i co najwyżej 30 znaków.

Wyjście

Dla każdej linii tekstu wypisz oddzielone spacjami trzy liczby, oznaczające kolejno liczbę wszystkich znaków w tej linii, liczbę zawartych w niej liter oraz liczbę cyfr.

Przykład

Wejście:

2
Poczatek
23572,asd,329956!!!
 
Wyjście:

8 8 0
19 3 11

Zadanie Kalkulator (ppr21)
==========================

Początkujący programista Marcin postanowił zaimplementować zaawansowany kalkulator, obsługujący niezwykle skomplikowane funkcje dwóch zmiennych. Na początek chce jednak sprawdzić swoje umiejętności pisząc program kalkulatora obsługującego tylko trzy najprostsze działania na liczbach całkowitych (zwykle kalkulatory obsługują co najmniej cztery działania, ale Marcin wciąż nie może się zdecydować, w jaki sposób karać użytkowników próbujących dzielić przez zero). Pomóż mu w tym zadaniu.

Wejście

W pierwszej linii wejścia znajduje się liczba naturalna n (1<=n<=20) oznaczająca liczbę działań do wykonania. W kolejnych liniach opisane są te działania, w postaci "a op b", gdzie a i b są liczbami całkowitymi z zakresu od -1000 do 1000, a op jest jednym ze znaków: +, - lub *.

Wyjście

Dla każdego zadanego działania wypisz w osobnej linii jego wynik.

Przykład

Wejście:

3
13 + -10
2 * 5
7 - 18

Wyjście:

3
10
-11

Zadanie Słownik delfinów (ppr22)
================================

Długoletnie badania nad intelektem i mową delfinów przyniosły wreszcie rezultaty. Naukowcom udało się ustalić reguły zapisu delfinich słów za pomocą liter alfabetu angielskiego oraz zanotować wiele powszechnie używanych przez delfiny wyrazów. Napisz program, który posortuje te słowa alfabetycznie, ułatwiając tworzenie słownika delfinów.

Wejście

Pierwsza linia wejścia zawiera liczbę całkowitą n (1<=n<=1000), oznaczającą liczbę słów zarejestrowanych przez naukowców. W kolejnych n liniach podane są te słowa. Każde z nich składa się z co najmniej jednej i co najwyżej 20 małych liter alfabetu angielskiego.

Wyjście

Wypisz w osobnych liniach wszystkie znane słowa języka delfinów, posortowane alfabetycznie (UWAGA! łańcuch "a" jest "mniejszy" niż łańcuch "ab").

Przykład

Wejście:

5
afdg
sspade
trekk
bbre
lol

Wyjście:

afdg
bbre
lol
sspade
trekk
 
Wejście:

2
abc
a

Wyjście:

a
abc

Zadanie Loteria (ppr23)
=======================

W miasteczku Macondo co tydzień odbywa się loteria z cennymi nagrodami. Sprzedawane losy mają przypisane numery od 1 do 100 000 000. Losowany jest tylko jeden zwycięski kupon. Niektórzy mieszkańcy podejrzewają, że maszyna losująca nie jest do końca uczciwa i pewne numery mają większe szanse na wygraną. Sprawdź, czy wyniki dotychczasowych losowań wskazują na taką możliwość.

Wejście

Pierwsza linia wejścia zawiera liczbę n (1<=n<=100 000) dotychczasowych losowań. W kolejnych n liniach podane są numery kuponów, które wygrały w poszczególnych losowaniach (liczby całkowite z zakresu od 1 do 100 000 000).

Wyjście 

Wypisz posortowane rosnąco numery, które zostały wylosowane więcej niż jeden raz.

Przykład

Wejście:

7
1
3
8
3
1
3
1004

Wyjście:

1
3

Zadanie Trójkąt (ppr24)
=======================

Dany jest trójkąt prostokątny. Znamy długość przyprostokątnych. Oblicz długość przeciwprostokątnej (zaokrąglonej w górę do najbliższej liczby całkowitej) oraz wielkość najmniejszego z kątów w tym trójkącie, wyrażoną w stopniach, zaokrągloną do liczby całkowitej.

Wejście

Pierwsza linia wejścia składa się z jednej liczby całkowitej x (1<= x <= 1000) oznaczającej zestawów danych.
Każdy zestaw składa się z dwóch liczb naturalnych (od 1 do 1000) oznaczających długości przyprostokątnych w trójkącie.

Wyjście

Dla każdego zestawu należy wypisać dwie liczby całkowite, z których pierwsza oznacza zaokrągloną w górę długość przeciwprostokątnej, a druga to wielkość najmniejszego z kątów wyrażona w stopniach (po zaokrągleniu).

Przykład

Wejście:
3
2 2
3 4
9 8

Wyjście:
3 45
5 37
13 42

Zadanie Qsort (ppr25)
=====================

„Dziwny jest teeen świat…” — leciało właśnie w radiu. „Oj dziwny, dziwny…” — powiedziałem sobie patrząc na czekoladkę, którą dostałem właśnie od mojego wnuczka. „Co to się porobiło…” — mruczałem sobie pod nosem, tak żeby mój kochany Jasio tego nie usłyszał i nie pomyślał sobie, że jestem niezadowolony. Bardzo lubiłem dostawać czekoladki od mojego wnuczka. A lubiłem dlatego, że lubiłem wnuczka, a nie czekoladki. Ale nigdy nie miałem serca powiedzieć mu o tym — „często jest, że ktoś słowem złym zabija tak jak nożem”. Oglądałem uważnie każdą czekoladkę, którą dostawałem od mojego kochanego Jasia. Nigdy jeszcze żadnej nie zjadłem. Ale każdą dokładnie oglądałem z zaciekawieniem. Głównie dlatego, że prawie każda była inna. „Za moich czasów… ech… czekolada to była czekolada. Prostokąt, wyraźnie zarysowane kostki” — tak sobie marudziłem, ze starego przyzwyczajenia marudzenia na wszystko, na co tylko się da. W rzeczywistości fascynowała mnie różnorodność kształtu, formy, koloru…. wszystko za każdym razem było inne. Każdą nową czekoladkę od mojego Jasia wkładałem do specjalnej szafki, gdzie trzymałem wszystkie, które dostałem od niego. „Z tą też tak zrobię” — powziąłem postanowienie. Otworzyłem szafkę. Ale… „Przyszedł już czas, najwyższy czas” — „Dobrze prawi” — pomyślałem. Najwyższy czas zrobić porządek w szafce. W mig pojawiła się myśl — „Uporządkuję czekoladki tak, żeby na dole były te o największej liczbie kostek, a im wyżej, tym będą mniejsze”. Ale znowu ale… oczy już nie te. „Miniaturyzacja świata jest na pewno oszczędnościową akcją wymierzoną przeciwko emerytom!”. Co teraz? Przecież nie mogę poprosić Jasia o pomoc… „Lecz ludzi dobrej woli jest więcej” —  „Dobrze prawi. Zwrócę się o pomoc do syna”. Ale syn mój strasznym jest pracoholikiem. Cały czas spędza przy komputerze. Na moją prośbę odburknął tylko niezadowolony, że mu przeszkadzam „napiszę Ci program, ok?”. „OK” powiedziałem i zadowolony z użycia tego jakże młodzieżowego słowa wróciłem na swój fotel czekając na program.

Syn okazał się jednak bardzo zajęty i nie miał czasu napisać tego programu. Zlecił mejlem napisanie go właśnie Tobie. Zadaniem jest więc napisanie programu, który dostając na wejściu rozmiary czekoladek (liczby kostek, z których się składają), na wyjściu wypisze kolejność w jakiej trzeba je odkładać do szafki, od największej do najmniejszej.

Ponieważ Ty też nie za bardzo umiesz to zadanie zrobić, to ów syn podpowiedział Ci, że do jego rozwiązania można użyć funkcji qsort. Jeszcze nie wiesz co to znaczy, ale od tego już jest wujek google ;)

Specyfikacja wejścia

Pierwsza linia wejścia zawiera liczbę całkowitą D (1 <= D <= 50), oznaczającą liczbę zestawów danych. Każdy zestaw składa się z dwóch linii. W pierwszej znajduje się liczba N — liczba czekoladek, które były w szafce (1 <= N <= 100). W drugiej linii znajduje się N dodatnich liczb całkowitych oddzielonych spacjami, oznaczających wielkości kolejnych czekoladek, z których każda jest niewiększa niż 10000.

Specyfikacja wyjścia

Wyjście zawiera dokładnie D linii. Dla każdego zestawu należy najpierw wypisać, jakiej wielkości czekoladki trzeba wkładać po kolei do szafki.

Przykład

Wejście

2
4
1 2 3 4
10
9 2 34 1 2 3 4 1 12 3

Wyjście

4 3 2 1
34 12 9 4 3 3 2 2 1 1

Zadanie NWD (ppr26)
===================

Oblicz największy wspólny dzielnik czterech liczb.

Wejście

Pierwsza linia wejścia składa się z jednej liczby całkowitej x (1<= x <= 1000) oznaczającej zestawów danych. 
Każdy zestaw składa się z czterech liczb naturalnych (od 1 do 30000).

Wyjście

Dla każdego zestawu należy wypisać największy wspólny dzielnik liczb podanych na wejściu.

Przykład

Wejście:
2
2 3 4 5
30 15 10 25

Wyjście:
1
5

Zadanie NWW (ppr27)
===================

Oblicz najmniejszą wspólną wielokrotność czterech liczb.

Wejście

Pierwsza linia wejścia składa się z jednej liczby całkowitej x (1<= x <= 1000) oznaczającej zestawów danych.
Każdy zestaw składa się z czterech liczb naturalnych (od 1 do 100).

Wyjście

Dla każdego zestawu należy wypisać najmniejszą wspólną wielokrotność liczb podanych na wejściu.

Przykład

Wejście:
2
2 3 4 5
30 15 10 25

Wyjście:
60
150

Zadanie Bilety (ppr3)
=====================

Grupa studentów wybrała się do kina. Niestety, nie wszyscy pamiętali o zabraniu legitymacji studenckich, przez co tylko U osób mogło kupić bilety ulgowe, a pozostałe N osób musiało kupić bilety normalne. W sumie wszystkie bilety kosztowały S złotych. Wiedząc, że cena każdego biletu wyraża się całkowitą liczbą groszy, a bilet ulgowy jest dokładnie dwa razy tańszy od normalnego, oblicz cenę normalnego biletu do kina.

Wejście

Wejście składa się z jednej linii, zawierającej oddzielone pojedynczymi spacjami trzy liczby całkowite U, N, S (1<U,N<100, 0<S<10000).

Wyjście

Należy wypisać cenę biletu normalnego w złotych, z dokładnie dwiema cyframi po kropce dziesiętnej.

Przykład

Wejście:
4 2 102

Wyjście: 
25.50

Zadanie Rzutka gra (ppr4)
=========================

Pan Jan pracujący w wesołym miasteczku wymyślił bardzo ciekawą grę. Ustawił tarczę w kształcie "linijki", na której były zapisane od lewej do prawej liczby od 1 do 10000. Gdy ktoś chciał zagrać w grę, Pan Jan losował dwie liczby x i y (x<=y), a celem gracza było trafienie lotką w jakąś liczbę pomiędzy tymi dwoma. Jeśli gracz trafił w cel, wówczas Pan Jan krzyczał "BINGO" i wręczał nagrodę. Jeśli cel nie został osiągnięty, wówczas Pan Jan przyznawał graczowi tyle punktów karnych, ile wynosiła odległość od tego celu (na pocieszenie, gdyż w praktyce nie miało to żadnego znaczenia).
Napisz program komputerowy, który pomoże Panu Janowi obsługiwać tę grę.

Wejście

Wejście składa się z dwóch linii. Pierwsza zawiera dwie liczby całkowite x i y (1<=x<=y<=10000), które oznaczają początek i koniec przedziału, w który należy celować. W drugiej linii znajduje się jedna liczba oznaczająca miejsce, w które trafił gracz.

Wyjście

Jeśli gracz trafił w cel, należy wypisać słowo "BINGO". Jeśli gracz chybił, należy wypisać liczbę zdobytych przez niego punktów karnych (odległość od celu).

Uwaga:
Granice przedziałów należą również do celu - patrz przykład 3.

Przykład 1

Wejście:
4 8
7

Wyjście:
BINGO

Przykład 2

Wejście:
4 8
12

Wyjście:
4

Przykład 3

Wejście:
4 8
8

Wyjście:
BINGO

Zadanie Rok przestępny (ppr4a)
==============================

Napisz program, który sprawdzi czy podany rok jest rokiem przestępnym. Rok przestępny (liczbowo) spełnia następujące warunki: jest podzielny przez 4, ale nie jest podzielny przez 100; lub jest podzielny przez 400.

Wejście

Wejście składa się z jednej linii, zawierającej rok.

Wyjście

Należy wypisać napis 'Yes', jeżeli rok jest przestępny lub napis 'No' w przeciwnym przypadku.

Przykład 1

Wejście:
2004

Wyjście: 
Yes

Przykład 2

Wejście:
2013

Wyjście: 
No

---------------------------------------------------------
Leap year

Write a program which checks if a year is a leap year. Leap year (numerically) satisfies the following conditions: it is divisible by 4 but it is not divisible by 100; or it is divisible by 400.

Input:

Input is a single line with a year.

Output:

Write a word 'Yes' if a year is a leap year and 'No' otherwise.

Example 1:
In:
2004

Out:
Yes

Example 2:
In:
2013

Out:
No

Zadanie Starsza data (ppr4b)
============================

Są dane dwie daty, każda w postaci trzech liczb całkowitych. Napisz program, który wskaże starszą datę.

Wejście

Wejście składa się z dwóch linii, każda zawiera datę w postaci trzech liczb całkowitych, odpowiadających za rok, miesiąc i dzień.

Wyjście

Należy wypisać starszą datę.

Przykład

Wejście:
2013 10 3
2012 10 1

Wyjście: 
2012 10 1

--------------------------------------------------------------------
Older date

Write a program which selects an older date from given two dates.

Input:

Input is two line length. Each line consists of three integers representing a date: a year, a month and a day, respectively.

Output:

Write the older date as three integers.

Example:

In:
2013 10 3
2012 10 1

Out:
2012 10 1

Zadanie Ciągi liczb (ppr5)
==========================

Napisz program, który wypisze wszystkie liczby parzyste lub nieparzyste z danego przedziału.

Wejście

Wejście składa się z dwóch linii. Pierwsza zawiera dwie liczby całkowite x i y (1<=x<=y<=10000), które oznaczają początek i koniec przedziału, z którego należy wypisać liczby. 
W drugiej linii znajduje się jedna litera: 'p' lub 'n', która oznacza, czy program ma wypisywać odpowiednio liczby parzyste, czy nieparzyste.

Wyjście

Na wyjściu, w jednej linii, ma znajdować się ciąg parzystych lub nieparzystych liczb z danego przedziału, wypisanych w kolejności rosnącej.

Uwaga:
Granice przedziału należą również do przedziału.

Przykład 1

Wejście:
4 8
p

Wyjście:
4 6 8

Przykład 2

Wejście:
4 8
n

Wyjście:
5 7

Zadanie Rzutka gra 2 (ppr6)
===========================

Pan Jan pracujący w wesołym miasteczku wymyślił bardzo ciekawą grę. Ustawił tarczę w kształcie "linijki", na której były zapisane od lewej do prawej liczby od 1 do 10000. Gdy ktoś chciał zagrać w grę, Pan Jan losował dwie liczby x i y (x<=y), a celem gracza było trafienie lotką w jakąś liczbę pomiędzy tymi dwoma. Jeśli gracz trafił w cel, wówczas Pan Jan krzyczał "BINGO" i wręczał nagrodę. Jeśli cel nie został osiągnięty, wówczas Pan Jan przyznawał graczowi tyle punktów karnych, ile wynosiła odległość od tego celu.
Do celu rzucało się pewną określoną liczbę razy. W przypadku gdy nie trafiło się w określony cel, liczba punktów karnych się kumulowała (wartości były do siebie dodawane), natomiast w momencie, w którym trafiło się w cel, liczba punktów była zerowana.
Napisz program komputerowy, który pomoże Panu Janowi obsługiwać tę grę i zliczać punkty karne.

Wejście

Pierwsza linia wejścia zawiera dwie liczby całkowite x i y (1<=x<=y<=10000), które oznaczają początek i koniec przedziału, w który należy celować.  W drugiej linii znajduje się liczba n (1<=n<=100) - liczba rzutów oddawanych przez gracza. Trzecia linia zawiera n liczb opisujących kolejne trafienia.

Wyjście

Na wyjściu powinna znajdować się jedna liczba całkowita oznaczająca liczbę punktów karnych na koniec gry.

Uwaga:
Granice przedziałów należą również do celu.

Przykład 1

Wejście:
4 8
7
1 2 3 4 5 6 7

Wyjście:
0

Przykład 2

Wejście:
4 8
7
7 6 5 4 3 2 1

Wyjście:
6

Zadanie Od A do B (ppr6a)
=========================

Zenek i Gienek dla zabicia czasu wymyślili prostą grę: jeden z nich podaje dwie liczby całkowite A i B oraz znak oznaczający co należy zrobić z liczbami z podanego przedziału. Znak '+' oznacza, że liczby należy dodawać, znak '-', że odejmować, a '*', że mnożyć. Drugi gracz musi podać odpowiednio sumę, różnicę lub iloczyn liczb od mniejszej do większej (liczby A i B należy uwzględnić w obliczeniach).

Dodatkowo gracze przyjeli, że jeżeli liczby A i B będą identyczne, to nie należy podawać żadnego wyniku. Dla sprawdzania swojej czujności powiedzieli również, że liczba A wcale nie musi być mniejsza niż B i gracz musi sobie w razie potrzeby sam je przestawić!

Napisz symulator ich gry.

Wejście:

W pierwszej lini wejścia znajduje się liczba n (1 <= n <= 1000) oznaczająca liczbę rozgrywanych gier.
Każda z n następnych linii wejścia składa się z dwóch liczb A i B (-1000 <= A,B <= 1000) oraz znaku '+', '-' lub '*'.

Wynik:

Jeżeli na wejściu pojawił się znak '+', należy wypisać sumę liczb od A do B, jeżeli '-', należy wypisać różnicę, a jeżeli '*' to iloczyn. Jeżeli liczby A i B są sobie równe, nie należy nic wypisywać.

Przykład:

Wejście:
3
1 3 +
2 4 *
-5 -59 -
Wyjście:
6
24
1760

Zadanie Odwrócone podciągi (ppr7a)
==================================

Profesor Nowak jest matematykiem i bada własności ciągów i ich podciągów. Dla danego ciągu (a_n) potrzebuje znaleźć podciąg złożony z co trzeciego wyrazu tego podciągu (a_3n). Poprosił Cię o pomoc. Napisz program, który po wczytaniu N pierwszych wyrazów ciągu wypisze wyrazy szukanego podciągu, ale w odwrotnej kolejności.
Wejście

W pierwszej linii wejścia znajduje się liczba całkowita N (2<=N<=200). Druga linia wejścia zawiera N wyrazów ciągu, czyli liczb całkowitych z zakresu od 0 do 999.

Wyjście

Na wyjściu powinien znaleźć się ciąg oddzielonych spacjami liczb, będący wypisanym od końca szukanym podciągiem.

Przykład 1

Wejście:
9
9 8 7 6 5 4 3 2 1

Wyjście:
1 4 7

Przykład 2

Wejście:
7
2 2 5 1 1 3 4

Wyjście:
3 5

Zadanie Duże litery odwrotnie (ppr7c)
=====================================

Napisz program, który wczyta sekwencję liter, po czym wypisze w odwrotnej kolejności wyłącznie duże litery.
Wejście
W pierwszej linii wejścia znajduje się liczba całkowita N (2<=N<=300). Druga linia wejścia zawiera N liter małych lub dużych.

Wyjście

Na wyjściu powinien znaleźć się ciąg oddzielonych spacjami podanych wcześniej dużych liter w odwrotnej kolejności.

Przykład 1

Wejście:
3
a B C

Wyjście:
C B

Przykład 2

Wejście:
7
a b C d E f G

Wyjście:
G E C

----------------------------------------------------------------------
Reverse upper-case letters

Write a program that reads a sequence of characters and outputs only the upper case letters in reverse order.

Input:

First line of the input is an integer N (2<=N<=300). Second line consists of the sequence of upper and lower case letters of length N.

Output:

Write to the output only upper case letters in reverse order than they occured in the input.

Example 1:

In:
3
a B C

Out:
C B

Example 2:

In:
7
a b C d E f G

Out:
G E C

Zadanie Wybory (ppr8)
=====================

W wyborach burmistrza Wielkiego Guslaru wystartowało M kandydatów ponumerowanych liczbami od 1 do M. Każdy z N głosujących oddał ważny głos na jednego z nich. Napisz program, który wczyta opis głosów, a następnie poda wyniki głosowania i numer kandydata wybranego na burmistrza. Zgodnie z prawem wyborczym Wielkiego Guslaru, jeśli dwóch lub więcej kandydatów uzyskało tę samą, najwyższą liczbę głosów, to wybory wygrywa ten z nich, który ma niższy numer.

Wejście

W pierwszej linii wejścia znajdują się dwie liczby całkowite M i N (1<=M<=10, 1<=N<=1000), określające odpowiednio liczbę kandydatów i liczbę oddanych głosów. W drugiej linii znajduje się N liczb całkowitych z zakresu od 1 do M. Są to numery kandydatów, na których oddane zostały poszczególne głosy.

Wyjście

W pierwszych M liniach wyjścia należy podać kolejno liczby głosów zdobytych przez kandydatów z numerami od 1 do M, w formacie "X: Y", gdzie X oznacza numer kandydata, a Y - liczbę oddanych na niego głosów. Następnie w osobnej linii należy wypisać numer kandydata, który wygrał wybory.

Przykład

Wejście:
3 10
1 3 2 1 2 3 3 3 2 2 

Wyjście:
1: 2
2: 4
3: 4
2

Zadanie Obracanie tablicy w lewo (ppr9a)
========================================

Dana jest tablica liczb całkowitych składająca się z N wierszy i M kolumn. Wypisz tablicę liczb, która powstanie po obróceniu wejściowej tablicy o 90 stopni w lewo (ostatnia kolumna staje się pierwszym wierszem, przedostatnia kolumna - drugim wierszem, i tak dalej: pierwsza kolumna staje się ostatnim wierszem).

Wejście
W pierwszej linii wejścia znajdują się dwie liczby całkowite N i M (2<=N,M<=100), oznaczające liczbę wierszy i kolumn w tablicy. Każda z następnych N linii zawiera M liczb całkowitych z zakresu od 0 do 99 oddzielonych spacjami.

Wyjście
Na wyjściu należy wypisać tablicę, która powstanie po obróceniu o 90 stopni w lewo tablicy wejściowej.

Przykład

Wejście:
3 4
1 2 3 4
5 6 7 8
9 10 11 12

Wyjście:
4 8 12
3 7 11
2 6 10
1 5 9

Zadanie Suma kwadratów (ppr_intro_1)
====================================

Napisz program, który wczyta dwie liczby i wypisze sumę ich kwadratów.
Wejście:
Dwie liczby całkowite A i B.
Wyjście:
Jedna liczba całkowita będąca sumą kwadratów liczb A i B.
Przykład:
Wejście:
2 3
Wyjście:
13

Zadanie Odwróć tablicę (ppr_intro_10)
=====================================

Napisz program, który wczyta N liczb całkowitych i wypisze je w odwrotnej kolejności.

Wejście:
W pierwszej linii wejścia znajduje się liczba N (1 <= N <= 1000) oznaczająca ilość kolejnych liczb na wejściu do wczytania.
Wyjście:
N liczb, które pojawiły się na wejściu w odwrotnej kolejności i oddzielone spacją.
Przykład:
Wejście:
4
1 2 3 4
Wyjście:
4 3 2 1

Zadanie Średnia bez zera (ppr_intro_11)
=======================================

Napisz program, który będzie wczytywał liczby całkowite, aż do wystąpienia liczby 0 i wypisze ich średnią arytmetyczną z dokładnością do dwóch miejsc po przecinku.
Wejście:
Na wejściu pojawiają się liczby całkowite różne od zera, a ostatnią liczbą jest 0. Liczb nie będzie więcej niż 1000.
Wyjście:
Pojedyncza liczba będąca średnią arytmetyczną liczb z wejścia.
Przykład:
Wejście:
1 2 3 4 0
Wyjście:
2.50

Zadanie Zlicz największą (ppr_intro_12)
=======================================

Napisz program, który wczyta N liczb całkowitych i wypisze ile razy pojawiła się największa z nich.
Wejście:
W pierwszej linii wejścia znajduje się liczba N (1 <= N <= 1000) oznaczająca ilość kolejnych liczb na wejściu do wczytania.
Wyjście:
Wyjście składa się z liczby wystąpień największej z podanych liczb.
Przykład:
Wejście:
6
1 4 2 5 3 5
Wyjście:
2

Zadanie Delta trójmianu (ppr_intro_2)
=====================================

Napisz program, który obliczy deltę trójmianu postaci: Ax^2 + Bx + C == 0, mając na wejściu dane liczby całkowite A, B i C.
Wejście:
Trzy liczby całkowite A, B i C opisujące trójmian.
Wyjście:
Jedna liczba całkowita będąca wyróżnikiem trójmianu (delta).
Przykład:
Wejście:
2 3 -1
Wyjście:
17

Zadanie Iloraz (ppr_intro_3)
============================

Napisz program, który obliczy iloraz dwóch liczb zmiennoprzecinkowych A i B i wypisze go z dokładnością do czterech miejsc po przecinku.
Wejście:
Dwie liczby zmiennoprzecinkowe A i B.
Wyjście:
Iloraz liczb A i B z dokładnością do czterech miejsc po przecinku.
Przykład:
Wejście:
5.1234 2.123
Wyjście:
2.4133

Zadanie Porównanie liczb (ppr_intro_4a)
=======================================

Napisz program, który wczyta dwie liczby całkowite A i B i wypisze odpowiedni komunikat 'A>B', 'A<B' lub 'A==B'.
Wejście:
Dwie liczby całkowite A i B.
Wyjście:
Napis 'A>B', jeżeli liczba A jest większa niż B, 'A<B', jeżeli liczba A jest mniejsza od B i 'A==B', jeżeli liczby są sobie równe.
Przykład:
Wejście:
2 3
Wyjście:
A<B

Zadanie Znak liczby (ppr_intro_4b)
==================================

Napisz program, który wypisze znak liczby całkowitej. Jeżeli liczba jest dodatnia, to wypisze '+', jeżeli ujemna, to '-', a gdy równa zero, to '0'.
Wejście:
Jedna liczba całkowita.
Wyjście:
Znak '+' (plus) jeżeli liczba jest dodatnia, znak '-' (minus) jeżeli jest ujemna i '0' (zero) jeżeli jest równa zero.
Przykład:
Wejście:
123
Wyjście:
+

Zadanie Sześciany liczb (ppr_intro_7)
=====================================

Napisz program, który wczyta N liczb całkowitych i wypisze ich szcześciany.
Wejście:
W pierwszej linii wejścia znajduje się liczba N oznaczająca ilość kolejnych liczb na wejściu do wczytania.
Wyjście:
Sześciany liczb podanych na wejściu oddzielone spacją
Przykład:
Wejście:
4
1 2 3 4
Wyjście:
1 8 27 64

Zadanie Parzysta czy nieparzysta (ppr_intro_7a)
===============================================

Napisz program, który wczyta N liczb całkowitych i dla każdej z nich wypisze 'P', jeżeli liczba jest parzysta i 'N', jeżeli jest nieparzysta.
Wejście:
W pierwszej linii wejścia znajduje się liczba N oznaczająca ilość kolejnych liczb na wejściu do wczytania.
Wyjście:
Wyjście składa się z N znaków 'P' lub 'N'. Znak 'P' na i-tej pozycji należy wypisać jeżeli i-ta wczytana liczba była parzysta. W przeciwnym wypadku należy wypisać znak 'N'. Znaki nie są oddzielone spacją.
Przykład:
Wejście:
4
1 2 3 4
Wyjście:
NPNP

Zadanie Suma wielu liczb (ppr_intro_8)
======================================

Napisz program, który wczyta N liczb całkowitych i obliczy ich sumę.
Wejście:
W pierwszej linii wejścia znajduje się liczba N oznaczająca ilość kolejnych liczb na wejściu do wczytania.
Wyjście:
Suma N liczb, które pojawiły się na wejściu.
Przykład:
Wejście:
4
1 2 3 10
Wyjście:
16

Zadanie Zliczanie wystąpień (ppr_intro_8b)
==========================================

Napisz program, który wczyta N liczb całkowitych i zliczy ile razy wśród nich pojawiła się liczba X.
Wejście:
W pierwszej lini wejścia znajdują się liczba całkowita X oraz liczba N oznaczająca ilość kolejnych liczb do wczytania, które pojawią się na wejściu w drugiej linii.
Wyjście:
Liczba wystąpień liczby X wśród podanych N liczb.
Przykład:
Wejście:
2 5
1 -2 2 12 2
Wyjście:
2

Zadanie Tylko podzielne z przedziału (ppr_intro_9)
==================================================

Napisz program, który wypisze wszystkie liczby podzielne przez X znajdujące się pomiędzy liczbami A i B (włącznie). Uwaga: A może być większe niż B.
Wejście:
Trzy liczby całkowite: dzielnik X oraz granice przedziału A i B.
Wyjście:
Liczby podzielne przez X z przedziału A i B (włącznie), oddzielone spacją.
Przykład 1:
Wejście:
5 3 15
Wyjście:
5 10 15
Przykład 2:
Wejście:
5 15 3
Wyjście:
15 10 5

